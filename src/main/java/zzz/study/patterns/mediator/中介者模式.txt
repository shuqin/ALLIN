/*
 * 中介者模式【Mediator】:
 * 引入一个中介者对象，来封装和管理对象集合之间的交互。
 * 中介者模式有利于降低对象之间的显式引用和耦合程度，减少对象交互的复杂性。
 *
 * 使用中介者模式，可以管理关系的完整性。
 *
 * 在例子中：
 * 假设：
 * ①  一个学生【Student】只能分配到一个特定公寓【Department】；
 * ②  一个公寓可以容纳多个学生。
 *
 * 面向对象语言往往没有对关系提供内在支持；
 * 常规的做法是，在对象中设置对另一对象的显式应用：
 * 比如，在 Student 中设置 Department 属性， 在 Department 中设置 Student 属性；
 * 这样做的缺点是，将对象集合的关系分散到多个对象中，当对象之间的关系发生变化时，
 * 往往就容易出错。
 *
 * 
 * 当一个学生换到另一个公寓时， 那么相关公寓也必须做出更新；
 * 同时，该学生与原来公寓的联系必须切断。
 * 而在这一过程中，如果使用显式的引用，往往会出现问题。
 *
 * 此时，我们引入一个中介者对象来管理这些对象之间的交互，
 * 将对象集合【Student集合 --- Department集合】之间的关系封装到该中介者对象中，
 * 有利于将分散的关系信息集中起来，更便于管理。
 *
 */