 /*
  * 模板方法模式：
  * 在父类的方法中实现算法，并将算法中某些步骤的定义推迟，从而使得子类可以重新定义这些步骤。
  *
  * 可以将某些步骤定义为抽象方法，或者存根方法，或者某个单独接口中的方法；
  * 这样产生了一个更为严格的“模板”， 它明确定义了算法中的哪些步骤可以由其他类来提供。
  *
  * 模板方法模式的范例： 排序
  * 排序算法中，只有一个“比较对象”的关键步骤难以确定（根据对象的哪个属性进行排序以及如何确定大小）。
  * 可以将比较对象的步骤（compare(Object e1, Object e2)）推迟，
  * 作为接口（Comparator）由其它类（NameComparator, GradeComparator）来实现，
  * 并传入到排序方法的参数（可选的比较器 Comparator）中，从而将整个排序算法补充完整。
  *
  * Array.sort(T[] a, Comparator<? super T> c)
  *
  */
  